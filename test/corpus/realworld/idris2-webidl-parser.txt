============================================
idris2-webidl-parser
============================================
package parser-webidl
version   = 0.1.0
authors   = "stefan-hoeck"
sourcedir = "src"
depends   = parser
          , refined
          , sop

brief     = "A total parser and lexer for the WebIDL interface description language"

modules = Data.Bitraversable
        , Data.Functor.Const
        , Data.Traversable

        , Text.WebIDL.Types
        , Text.WebIDL.Types.Argument
        , Text.WebIDL.Types.Attribute
        , Text.WebIDL.Types.Definition
        , Text.WebIDL.Types.Identifier
        , Text.WebIDL.Types.Member
        , Text.WebIDL.Types.Numbers
        , Text.WebIDL.Types.StringLit
        , Text.WebIDL.Types.Symbol
        , Text.WebIDL.Types.Token
        , Text.WebIDL.Types.Type

        , Text.WebIDL.Encoder
        , Text.WebIDL.Lexer

        , Text.WebIDL.Parser
        , Text.WebIDL.Parser.Arguments
        , Text.WebIDL.Parser.Attributes
        , Text.WebIDL.Parser.Definitions
        , Text.WebIDL.Parser.Members
        , Text.WebIDL.Parser.Type
        , Text.WebIDL.Parser.Util

------

(source_file
  (package_declaration
    (package_name))
  (version_declaration
    (version_number))
  (field_declaration
    (field_name)
    (string_value))
  (field_declaration
    (field_name)
    (string_value))
  (dependency_declaration
    (dependency_list
      (dependency_item
        (package_name))
      (dependency_item
        (package_name))
      (dependency_item
        (package_name))))
  (field_declaration
    (field_name)
    (string_value))
  (module_declaration
    (module_list
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name)
      (module_name))))
